name: frontend
on:
  push:
    paths: ["frontend/**"]
    branches: [main]
  pull_request:
    paths: ["frontend/**"]
    branches: [main]
  workflow_dispatch:

defaults:
  run:
    working-directory: frontend

jobs:
  prettier:
    name: Check frontend formatting using Prettier
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "20.x"
          cache: "npm"
          cache-dependency-path: frontend/package-lock.json
      - name: Install dependencies
        run: npm ci
      - name: Run Prettier
        run: npx prettier --check .
  eslint:
    name: Check for frontend issues using ESLint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "20.x"
          cache: "npm"
          cache-dependency-path: frontend/package-lock.json
      - name: Install dependencies
        run: npm ci
      - name: Run ESLint
        run: npx eslint .
  unit-tests:
    name: Run frontend unit tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "20.x"
          cache: "npm"
          cache-dependency-path: frontend/package-lock.json
      - name: Install dependencies
        run: npm ci
      - name: Load environment variables
        run: echo "${{ secrets.FRONTEND_ENV_FILE }}" > .env
      - name: Run unit tests
        run: npm test
  integration-tests:
    name: Run frontend integration tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "20.x"
          cache: "npm"
          cache-dependency-path: frontend/package-lock.json
      - name: Install dependencies
        run: npm ci
      - name: Load environment variables
        run: echo "${{ secrets.FRONTEND_ENV_FILE }}" > .env
      - name: Load test environment variables
        run: echo "${{ secrets.FRONTEND_TEST_ENV_FILE }}" > src/tests/integration/.env.test
      - name: Load backend environment variables
        working-directory: backend
        run: echo "${{ secrets.BACKEND_ENV_FILE }}" > .env
      - name: Set up backend
        working-directory: backend
        run: npm ci && npm run build
      - name: Install browsers
        run: npx playwright install
      - name: Run integration tests
        id: test
        run: npx playwright test
      - name: Print backend logs
        if: always()
        run: cat ../backend/server.out
